#Álgebra lineal con Numpy

¿Qué es NumPy?

Imagina que estás trabajando en un proyecto de análisis de datos o de programación científica, y necesitas manejar y manipular grandes cantidades de información numérica de manera eficiente. Aquí es donde entra en juego NumPy, que es una biblioteca de Python diseñada específicamente para el *cálculo numérico*.

NumPy, que significa "Numerical Python" (Python Numérico), proporciona una estructura de datos llamada "arreglo" (o "array" en inglés) que es similar a una lista o matriz, pero mucho más poderosa y eficiente. Los arreglos de NumPy son multidimensionales, lo que significa que pueden tener una o más dimensiones, como filas y columnas en una matriz.

Ofrece muchas funciones y operaciones matemáticas que son extremadamente rápidas y optimizadas para trabajar con arreglos. Esto se debe a que NumPy está escrito en un lenguaje de programación llamado C, que es muy rápido en comparación con Python. Cuando realizas cálculos con NumPy, estos se ejecutan en el bajo nivel de C, lo que brinda un rendimiento mucho mejor que si lo hicieras solo con Python.

Además de la eficiencia, NumPy también proporciona una amplia gama de funciones para realizar operaciones matemáticas en los arreglos.

---------------------------------------------------------------

Con virtualenv, puede crear un entorno virtual para su proyecto y luego instalar NumPy y Pandas en ese entorno específico:

# Crear un entorno virtual
virtualenv myenv

# Activar el entorno virtual
source myenv/bin/activate  # En Linux/Mac
myenv\Scripts\activate    # En Windows

# Instalar NumPy y Pandas en el entorno virtual
pip install numpy pandas

----------------------------------------------------------------

Con Anaconda:

conda --version
conda install numpy
conda install pandas

crear un nuevo entorno virtual:

conda create --name mi_entorno
conda activate mi_entorno
conda install numpy pandas

----------------------------------------------------------------

¿Cuál es la diferencia entre una lista de Python y un arreglo de NumPy?

La principal diferencia entre una lista de Python y un arreglo de NumPy radica en su naturaleza y su funcionalidad:

Listas de Python:

Son una estructura de datos básica en Python que puede contener elementos de diferentes tipos.
Las operaciones en listas son limitadas y su rendimiento no es óptimo para cálculos numéricos intensivos.
No proporcionan funciones específicas para realizar operaciones matemáticas y científicas.
Arreglos de NumPy:

Son una estructura de datos optimizada para cálculos numéricos y científicos en Python.
Todos los elementos de un arreglo de NumPy son del mismo tipo de datos, lo que permite realizar operaciones de manera eficiente.
Proporcionan una amplia gama de funciones y operaciones matemáticas para el procesamiento de datos numéricos, lo que los hace ideales para aplicaciones científicas y de análisis de datos.
En resumen, NumPy es una biblioteca especializada en arreglos numéricos que ofrece un rendimiento y una funcionalidad significativamente mejores que las listas de Python para cálculos y análisis numéricos. Por lo tanto, si trabajas con datos numéricos, es recomendable utilizar arreglos de NumPy en lugar de listas de Python.

----------------------------------------------------------------

Quiz 

1. ¿Qué es NumPy? 
# Una biblioteca de Python para operaciones numéricas y científicas.

2. ¿Cuál es la función principal de NumPy? 
# Manipular y operar con arreglos multidimensionales. 

3. ¿Cómo se crea un arreglo unidimensional en NumPy?
# Utilizando la función array () 

4. ¿Cuál es la diferencia entre una lista de Python y un arreglo de NumPy?
# Las listas pueden contener elementos de diferentes tipos, mientras que los arreglos de NumPy son homogéneos
#En el contexto de estructuras de datos, como listas o arreglos, "homogéneo" se refiere a que todos los elementos contenidos en esa estructura son del mismo tipo de datos. Esto significa que los elementos son consistentes en términos de su tipo y representación.

5. ¿Cuál es la ventaja de utilizar operaciones vectorizadas en NumPy en lugar de bucles de Python?
#Las operaciones vectorizadas son más eficientes en términos de rendimiento

6. ¿Qué es el broadcasting en NumPy?
# La replicación automática de valores para que los arreglos tengan formas compatibles

7. ¿Cuál es la función de np.sum() en NumPy?
# Calcular la suma de todos los elementos de un arreglo

8. ¿Cuál es la forma recomendada de importar NumPy en un programa de Python?
# import numpy as np